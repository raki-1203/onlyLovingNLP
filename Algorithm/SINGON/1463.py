N = int(input())
dp = [0]*(N+1) #0,1,2,3,4,... N 숫자에서 1 만드는데 필요한 횟수
for i in range(2,N+1):
    dp[i] = dp[i-1]+1 #어떠한 숫자도 1을 빼는 방식이 있으므로 거꾸로 생각해서 1에서 N을 가는 방법을 생각할 때 1을 더하는 방법이 있다.
    if i%2 == 0: #i가 2로 나누어 떨어진다면 가지수가 하나 더 생긴다.
        dp[i] = min(dp[i], dp[i//2]+1) #1에서 N을 가는중 숫자 i에 왔을 때 i-1까지 오는데 횟수+1(=dp[i])와 i/2에서 두 배를 해서 i로 왔을 때 횟수(=dp[i//2]+1) 중 작은 수를 dp[i]로 놓는다.
    if i%3 ==0: #i가 3으로 나누어 떨어진다면 가지수가 하나 더 생긴다.
        dp[i] = min(dp[i], dp[i//3]+1) #여기서 우변의 dp[i]는 이전 mim(dp[i], dp[i//2]+1)의 값이라는 것을 잊지 말자. 그것과 i//3의 횟수에서 +1을 더한 값중 작은 값이 dp[i]가 된다.
print(dp[N])
